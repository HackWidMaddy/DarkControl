function Get-RandomScreenCapture { [CmdletBinding(DefaultParameterSetName='OfWholeScreen')] param([Parameter(Mandatory=$true, ParameterSetName='OfWindow')][Switch]$OfWindow,[Parameter(Mandatory=$true, ParameterSetName='OfLocation')][Double[]]$OfLocation,[Parameter(ValueFromPipelineByPropertyName=$true)][string]$Path,[Parameter(ValueFromPipelineByPropertyName=$true)][ValidateSet('PNG', 'JPEG', 'TIFF', 'GIF', 'BMP')][string]$ImageFormat='JPEG',[Parameter(ValueFromPipelineByPropertyName=$true)][Timespan]$ScreenshotTimer="0:0:0.125"); begin { Add-Type -AssemblyName System.Drawing, System.Windows.Forms }; process { $saveScreenshotFromClipboard={ param($screenCapturePathBase,$c,$ImageFormat); $bitmap=[Windows.Forms.Clipboard]::GetImage(); $bitmap.Save("${screenCapturePathBase}.$ImageFormat"); $bitmap.Dispose() }; $Codec=[Drawing.Imaging.ImageCodecInfo]::GetImageEncoders() | Where-Object { $_.FormatDescription -eq $ImageFormat }; $ep=New-Object Drawing.Imaging.EncoderParameters; if ($ImageFormat -eq 'JPEG') { $ep.Param[0]=New-Object Drawing.Imaging.EncoderParameter ([System.Drawing.Imaging.Encoder]::Quality,[long]100) }; $tempDir=[System.IO.Path]::GetTempPath(); $filename="jndddud"; $screenCapturePath="$tempDir\$filename.$ImageFormat"; switch ($PSCmdlet.ParameterSetName) { 'OfWindow' { [Windows.Forms.Sendkeys]::SendWait("%{PrtSc}") } 'OfLocation' { if ($OfLocation.Count -ne 2 -and $OfLocation.Count -ne 4) { Write-Error "Must provide either a width and a height, or a top, left, width, and height"; return }; $bounds=if ($OfLocation.Count -eq 2) { New-Object Drawing.Rectangle -Property @{ Width=$OfLocation[0]; Height=$OfLocation[1] } } else { New-Object Drawing.Rectangle -Property @{ X=$OfLocation[0]; Y=$OfLocation[1]; Width=$OfLocation[2]; Height=$OfLocation[3] }; $bitmap=New-Object Drawing.Bitmap $bounds.width,$bounds.height; $graphics=[Drawing.Graphics]::FromImage($bitmap); $graphics.CopyFromScreen($bounds.Location,[Drawing.Point]::Empty,$bounds.size); $bitmap.Save($screenCapturePath,$Codec,$ep); $graphics.Dispose(); $bitmap.Dispose() } } 'OfWholeScreen' { [Windows.Forms.Sendkeys]::SendWait("{PrtSc}") } }; if ($saveScreenshotFromClipboard) { . $saveScreenshotFromClipboard -screenCapturePathBase $screenCapturePath -c $c -ImageFormat $ImageFormat }; Get-Item -ErrorAction SilentlyContinue -Path $screenCapturePath } }; Get-RandomScreenCapture